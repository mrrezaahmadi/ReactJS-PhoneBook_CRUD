{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/ContactCard/ContactCard.js","Components/ContactsContainer/ContactsContainer.js","Components/CreateContact/CreateContact.js","Components/PhoneBook/PhoneBook.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","Form","Row","Col","Group","InputGroup","Control","onChange","e","props","filter","placeholder","Button","variant","Component","ContactCard","contact","this","id","firstName","lastName","phone","email","address","birthday","details","onClick","remove","ContactsContainer","contacts","Table","responsive","hover","striped","className","map","key","CreateContact","state","changeHandler","target","name","value","setState","submitHandler","preventDefault","newContact","add","clearButtonHandler","onSubmit","type","PhoneBook","search","filteredContactsHandler","removeHandler","createContactHandler","console","log","filteredContacts","toLowerCase","includes","toString","Container","fluid","App","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.abeee6e0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, InputGroup, Button, Row, Col } from 'react-bootstrap'\r\n\r\nexport default class SearchBar extends Component {\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <Row>\r\n                    <Col>\r\n                        <Form.Group>\r\n                            <InputGroup>\r\n                                <Form.Control onChange={e => this.props.filter(e)} placeholder=\"Search the contact ... \" />\r\n                                <Button variant='primary'>Search</Button>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nexport default class ContactCard extends Component {\r\n    render() {\r\n        const { contact } = this.props\r\n        return (\r\n            <tr>\r\n                <td>{contact.id}</td>\r\n                <td>{contact.firstName}</td>\r\n                <td>{contact.lastName}</td>\r\n                <td>{contact.phone}</td>\r\n                <td>{contact.email}</td>\r\n                <td>{contact.address}</td>\r\n                <td>{contact.birthday}</td>\r\n                <td>{contact.details}</td>\r\n                <td>\r\n                    <Button variant=\"primary\">Edit</Button>\r\n                    <Button variant=\"danger\" onClick={() => this.props.remove(contact.id)}>Remove</Button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport ContactCard from '../ContactCard/ContactCard'\r\n\r\nexport default class ContactsContainer extends Component {\r\n    render() {\r\n        const { contacts } = this.props\r\n        return (\r\n            <Table responsive hover striped className=\"my-2\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Phone No.</th>\r\n                        <th>Email</th>\r\n                        <th>Address</th>\r\n                        <th>Birthday</th>\r\n                        <th>Details</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {contacts.map(contact => (\r\n                        <ContactCard contact={contact} key={contact.id} remove={this.props.remove} />\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Row, Col, Button } from 'react-bootstrap'\r\n\r\nexport default class CreateContact extends Component {\r\n    state = {\r\n        id: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        phone: '',\r\n        email: '',\r\n        address: '',\r\n        birthday: '',\r\n        details: ''\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        const { target: { name, value } } = e\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault()\r\n        const { id, firstName, lastName, phone, email, address, birthday, details } = this.state\r\n        let newContact = { id, firstName, lastName, phone, email, address, birthday, details }\r\n        this.props.add(newContact)\r\n    }\r\n\r\n    clearButtonHandler = () => {\r\n        this.setState({ id: '', firstName: '', lastName: '', phone: '', email: '', address: '', birthday: '', details: '' })\r\n    }\r\n\r\n    render() {\r\n        const { id, firstName, lastName, phone, email, address, birthday, details } = this.state\r\n        return (\r\n            <Form onSubmit={this.submitHandler}>\r\n\r\n                <Form.Group>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Control type=\"number\" value={id} onChange={this.changeHandler} name=\"id\" placeholder=\"ID\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control type=\"text\" value={firstName} onChange={this.changeHandler} name=\"firstName\" placeholder=\"First Name\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Control type=\"text\" value={lastName} onChange={this.changeHandler} name=\"lastName\" placeholder=\"Last Name\" />\r\n                        </Col>\r\n                    </Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Row>\r\n                        <Col><Form.Control type=\"email\" value={email} onChange={this.changeHandler} name=\"email\" placeholder=\"Email\" /></Col>\r\n                        <Col><Form.Control type=\"tel\" value={phone} onChange={this.changeHandler} name=\"phone\" placeholder=\"Phone No.\" /></Col>\r\n                        <Col><Form.Control type=\"text\" value={address} onChange={this.changeHandler} name=\"address\" placeholder=\"Address ...\" /></Col>\r\n                        <Col><Form.Control type=\"date\" value={birthday} onChange={this.changeHandler} /></Col>\r\n                    </Row>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Row>\r\n                        <Col><Form.Control type=\"text\" value={details} onChange={this.changeHandler} name=\"details\" placeholder=\"details\" /></Col>\r\n                    </Row>\r\n                </Form.Group>\r\n                <Row>\r\n                    <Col className=\"offset-5\">\r\n                        <Button variant=\"warning\" onClick={this.clearButtonHandler}>Clear</Button>\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.submitHandler}>Add</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\nimport ContactsContainer from '../ContactsContainer/ContactsContainer'\r\nimport CreateContact from '../CreateContact/CreateContact'\r\n\r\nexport default class PhoneBook extends Component {\r\n  state = {\r\n    contacts: [{\r\n      id: 1,\r\n      firstName: 'Mohammad Reza',\r\n      lastName: 'Ahmadi',\r\n      phone: 98912123456,\r\n      email: 'somename@gmail.com',\r\n      address: 'somewhere',\r\n      birthday: '01/01/1111',\r\n      details: 'something to fill the blank'\r\n    }, {\r\n      id: 2,\r\n      firstName: 'Alejandro',\r\n      lastName: 'Gonzales',\r\n      phone: 98912123467,\r\n      email: 'somename@gmail.com',\r\n      address: 'somewhere',\r\n      birthday: '01/01/1111',\r\n      details: 'something to fill the blank'\r\n    }, {\r\n      id: 3,\r\n      firstName: 'Jorgen',\r\n      lastName: 'Klopp',\r\n      phone: 98912123467,\r\n      email: 'somename@gmail.com',\r\n      address: 'somewhere',\r\n      birthday: '01/01/1111',\r\n      details: 'something to fill the blank'\r\n    }],\r\n    search: ''\r\n  }\r\n\r\n  filteredContactsHandler = (e) => {\r\n    this.setState({ search: e.target.value })\r\n  }\r\n\r\n  removeHandler = (id) => {\r\n    this.setState({ contacts: this.state.contacts.filter(contact => contact.id !== id) })\r\n  }\r\n\r\n  createContactHandler = (newContact) => {\r\n    console.log(newContact)\r\n    if (newContact.firstName) {\r\n      this.setState({ contacts: [...this.state.contacts, newContact] })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    let filteredContacts = this.state.contacts.filter(contact => contact.firstName.toLowerCase().includes(this.state.search.toLowerCase()) || contact.phone.toString().includes(this.state.search))\r\n    console.log(this.state.contacts)\r\n    return (\r\n      <Container fluid={\"md\"} className=\"my-4\">\r\n        <SearchBar filter={this.filteredContactsHandler} />\r\n        <CreateContact add={this.createContactHandler} />\r\n        <ContactsContainer contacts={filteredContacts} remove={this.removeHandler} />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PhoneBook from './Components/PhoneBook/PhoneBook'\n\n\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <PhoneBook />\n      // <div>\n      //   <h1>T E S T</h1>\n      // </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}